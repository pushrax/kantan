#!/bin/bash
# kantan - simple colour scheming (https://github.com/pushrax/kantan)
# Justin Li (http://j-li.net)
# MIT licensed

declare -a hex

if [ -z "$1" ]; then
	scheme="schemes/default"
else
	scheme="$1"
fi

if [ -f $scheme ]; then
	echo "Using scheme: $scheme"
	. $scheme
else
	echo "Missing scheme file: $scheme"
	exit
fi	

declare -a rgb_r rgb_b rgb_g srgb_r srgb_g srgb_b

for i in "${!hex[@]}"; do
	# Generate rgb equivalents
	rgb=$(printf "%d;%d;%d" 0x${hex[$i]:0:2} 0x${hex[$i]:2:2} 0x${hex[$i]:4:2})
	rgb=(${rgb//;/ })
	rgb_r[$i]=${rgb[0]}
	rgb_g[$i]=${rgb[1]}
	rgb_b[$i]=${rgb[2]}

	# Generate srgb equivalents
	srgb_r[$i]=$(awk "BEGIN{printf(\"%.18f\", ${rgb[0]}/255.0)}")
	srgb_g[$i]=$(awk "BEGIN{printf(\"%.18f\", ${rgb[1]}/255.0)}")
	srgb_b[$i]=$(awk "BEGIN{printf(\"%.18f\", ${rgb[2]}/255.0)}")
done


for file in templates/*; do
	output=output/${file##*/}
	echo "Processing $file => $output"
	while IFS='' read -r line; do
		# Substitute environment variables formatted as ${var}
		while [[ ${line} =~ (.*)(\$\{[][a-zA-Z0-9\.:_-]+\})(.*) ]]; do
			line="${BASH_REMATCH[1]}$(eval echo "\"${BASH_REMATCH[2]}\"")${BASH_REMATCH[3]}"
		done
		printf "%s\n" "$line"
	done < $file > $output
done

